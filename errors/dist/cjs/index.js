"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCodes = void 0;
var ErrorCodes;
(function (ErrorCodes) {
    ErrorCodes[ErrorCodes["account/pin-4-numbers"] = 0] = "account/pin-4-numbers";
    ErrorCodes[ErrorCodes["account/pin-code-incorrect"] = 1] = "account/pin-code-incorrect";
    ErrorCodes[ErrorCodes["auth/project-id-required"] = 2] = "auth/project-id-required";
    ErrorCodes[ErrorCodes["auth/redirect-url-not-allowed"] = 3] = "auth/redirect-url-not-allowed";
    ErrorCodes[ErrorCodes["auth/redirect-url-required"] = 4] = "auth/redirect-url-required";
    ErrorCodes[ErrorCodes["auth/token-expired"] = 5] = "auth/token-expired";
    ErrorCodes[ErrorCodes["auth/token-required"] = 6] = "auth/token-required";
    ErrorCodes[ErrorCodes["charge/max-amount-overflow"] = 7] = "charge/max-amount-overflow";
    ErrorCodes[ErrorCodes["charge/method-not-exists"] = 8] = "charge/method-not-exists";
    ErrorCodes[ErrorCodes["charge/min-amount-overflow"] = 9] = "charge/min-amount-overflow";
    ErrorCodes[ErrorCodes["cookies/not-found"] = 10] = "cookies/not-found";
    ErrorCodes[ErrorCodes["marketplace/cannot-insert-prod"] = 11] = "marketplace/cannot-insert-prod";
    ErrorCodes[ErrorCodes["marketplace/not-you"] = 12] = "marketplace/not-you";
    ErrorCodes[ErrorCodes["payout/id-required"] = 13] = "payout/id-required";
    ErrorCodes[ErrorCodes["payout/not-exists"] = 14] = "payout/not-exists";
    ErrorCodes[ErrorCodes["payout/not-you"] = 15] = "payout/not-you";
    ErrorCodes[ErrorCodes["payout/pin-code-incorrect"] = 16] = "payout/pin-code-incorrect";
    ErrorCodes[ErrorCodes["payout/token-expired"] = 17] = "payout/token-expired";
    ErrorCodes[ErrorCodes["payout/token-required"] = 18] = "payout/token-required";
    ErrorCodes[ErrorCodes["payout/unpaid"] = 19] = "payout/unpaid";
    ErrorCodes[ErrorCodes["project/not-exists"] = 20] = "project/not-exists";
    ErrorCodes[ErrorCodes["project/token-required"] = 21] = "project/token-required";
    ErrorCodes[ErrorCodes["project/unauthorized-origin"] = 22] = "project/unauthorized-origin";
    ErrorCodes[ErrorCodes["project/unsecure-fetch"] = 23] = "project/unsecure-fetch";
    ErrorCodes[ErrorCodes["salamati/doctor-id-required"] = 24] = "salamati/doctor-id-required";
    ErrorCodes[ErrorCodes["salamati/doctor-not-exists"] = 25] = "salamati/doctor-not-exists";
    ErrorCodes[ErrorCodes["salamati/not-doctor"] = 26] = "salamati/not-doctor";
    ErrorCodes[ErrorCodes["salamati/requests-limited"] = 27] = "salamati/requests-limited";
    ErrorCodes[ErrorCodes["salamati/signin-uncompleted"] = 28] = "salamati/signin-uncompleted";
    ErrorCodes[ErrorCodes["salamati/ticket-limited"] = 29] = "salamati/ticket-limited";
    ErrorCodes[ErrorCodes["subscription/already"] = 30] = "subscription/already";
    ErrorCodes[ErrorCodes["subscription/plan-not-exists"] = 31] = "subscription/plan-not-exists";
    ErrorCodes[ErrorCodes["subscription/plan-required"] = 32] = "subscription/plan-required";
    ErrorCodes[ErrorCodes["user/not-login"] = 33] = "user/not-login";
    ErrorCodes[ErrorCodes["user/not-you"] = 34] = "user/not-you";
    ErrorCodes[ErrorCodes["charge/amount-required"] = 35] = "charge/amount-required";
    ErrorCodes[ErrorCodes["charge/record-exists"] = 36] = "charge/record-exists";
    ErrorCodes[ErrorCodes["charge/record-not-exists"] = 37] = "charge/record-not-exists";
    ErrorCodes[ErrorCodes["charge/only-one-service"] = 38] = "charge/only-one-service";
})(ErrorCodes || (exports.ErrorCodes = ErrorCodes = {}));
